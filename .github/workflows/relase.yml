name: Release

on:
  workflow_dispatch:
    inputs:
      versionType:
        description: "Version type (major, minor, patch)"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  create-release-draft:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install semver
        run: npm install semver

      - name: Create Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const versionType = '${{ inputs.versionType }}';

            // 最新リリースを取得（初回対応付き）
            let latestVersion = 'v0.0.0';
            try {
              const { data: latestRelease } = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              latestVersion = latestRelease.tag_name;
            } catch (error) {
              console.log('No previous releases found, starting from v0.0.0');
            }

            // semverを使用
            const semver = require('semver');
            const newVersion = "v" + semver.inc(latestVersion, versionType);

            console.log(`Creating release ${newVersion} (${versionType} bump from ${latestVersion})`);

            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: newVersion,
              name: newVersion,
              body: `Release ${newVersion}`,
              generate_release_notes: true,
              draft: true,
            });

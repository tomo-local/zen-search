name: Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - "wxt.config.ts"

jobs:
  create-release:
    # マージされた かつ release/ ブランチからのPRの場合のみ実行
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install semver
        run: npm install semver

      - name: Create Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            // 全てのタグを取得
            const { data: tags } = await github.rest.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            if (tags.length === 0) {
              throw new Error(`タグが見つからないよ〜 😢`);
            }

            // 最新のタグを取得（一番上が最新）
            const latestTag = tags[0];
            const tagName = latestTag.name;
            const version = tagName.replace(/^v/, ''); // v を除去

            console.log(`🎯 最新タグ ${tagName} からリリース作成するよ〜！`);

            // 既存のリリースをチェック
            try {
              await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tagName
              });
              console.log(`⚠️ リリース ${tagName} は既に存在してるから終了〜`);
              return;
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
            }

            // リリースノートを生成
            const { data: releaseNotes } = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName
            });

            // リリースを作成
            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: `Release ${tagName}`,
              body: releaseNotes.body,
              draft: false,
              prerelease: false
            });

            console.log(`🎉 リリース ${tagName} 作成完了！`);
            console.log(`📋 リリースURL: ${release.html_url}`);
            console.log(`✅ やったね〜！🚀✨`);
